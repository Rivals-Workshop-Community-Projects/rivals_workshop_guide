(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{446:function(a,t,e){"use strict";e.r(t);var s=e(26),n=Object(s.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"movement"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#movement"}},[a._v("#")]),a._v(" Movement")]),a._v(" "),e("p",[a._v("Getting attributes tuned right is more important than it might seem, and has a huge influence on how the character\nfeels.")]),a._v(" "),e("div",{staticClass:"custom-block construction"},[e("p",{staticClass:"custom-block-title"},[a._v("Under Construction")]),a._v(" "),e("p",[a._v("This is all rough notes.")])]),a._v(" "),e("h2",{attrs:{id:"air-acceleration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#air-acceleration"}},[a._v("#")]),a._v(" Air acceleration")]),a._v(" "),e("ul",[e("li",[a._v("Improves recovery by halting and reversing direction faster.")]),a._v(" "),e("li",[a._v("Aids combat by letting you adjust position quickly during aerials, to extend combos, poke and retreat, or dodge and\npunish.")])]),a._v(" "),e("h2",{attrs:{id:"pratfall-accel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pratfall-accel"}},[a._v("#")]),a._v(" Pratfall accel")]),a._v(" "),e("p",[a._v("Relevant both when directly entering pratfall (such as at the end of a movement special), and when parried during an\naerial. Pratfall accel can't be made too high (higher than 0.6-7?)  or it will negate parries.")]),a._v(" "),e("h2",{attrs:{id:"air-speed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#air-speed"}},[a._v("#")]),a._v(" Air speed")]),a._v(" "),e("ul",[e("li",[a._v("Very helpful for horizontal recovery Characters with higher fall speeds or lower jumps naturally travel less")]),a._v(" "),e("li",[a._v("Allows cha horizontal distance before landing. Increasing air speed can compensate.")])]),a._v(" "),e("h2",{attrs:{id:"air-friction"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#air-friction"}},[a._v("#")]),a._v(" Air Friction")]),a._v(" "),e("p",[a._v("Air friction does not decrease your air speed. It determines how quickly you slow down when you're not holding any\nhorizontally on the control stick.")]),a._v(" "),e("ul",[e("li",[a._v("High acceleration + high friction means a character will change velocity quickly in all situations.")]),a._v(" "),e("li",[a._v("High acceleration + low friction means a character will respond quickly to the player's controls, but be very slow to\ndecelerate if the player lets go.")]),a._v(" "),e("li",[a._v("Low acceleration + high friction means a character will respond slowly to the player's controls, but be very quick to\ndecelerate if the player lets go. This would lead to an unintuitive situation where a player trying to slow down by\nholding the opposite direction will take longer than simply allowing friction to take over.")]),a._v(" "),e("li",[a._v("Low acceleration + low friction means a character will change velocity slowly in all situations.")])]),a._v(" "),e("p",[a._v("Low air friction means a character will not slow down as much if the player attempts to use a neutral aerial when\nmoving, and will cause them to travel a bit further during combos.")]),a._v(" "),e("p",[a._v("High air friction helps resist being KO'd to a degree, and it may be beneficial in some cases to slow to a stop quicker\nwithout providing directional input.")]),a._v(" "),e("p",[a._v("https://www.ssbwiki.com/Air_friction")]),a._v(" "),e("h2",{attrs:{id:"gravity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gravity"}},[a._v("#")]),a._v(" Gravity")]),a._v(" "),e("p",[a._v("Gravity is a constant downward acceleration.")]),a._v(" "),e("p",[a._v("A character might have high gravity but low fall speed. They would still fall slowly, but reach that fall speed faster.")]),a._v(" "),e("p",[a._v("Hitstun gravity has a significant effect on how easy the character is to combo "),e("em",[a._v("todo how exactly")])]),a._v(" "),e("h2",{attrs:{id:"initial-dash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initial-dash"}},[a._v("#")]),a._v(" Initial dash")]),a._v(" "),e("p",[a._v("Dash dancing stuff")]),a._v(" "),e("h2",{attrs:{id:"run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[a._v("#")]),a._v(" Run")]),a._v(" "),e("p",[a._v("Chasing, keep away")]),a._v(" "),e("h2",{attrs:{id:"air-dodge-length-and-jump-squat-timing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#air-dodge-length-and-jump-squat-timing"}},[a._v("#")]),a._v(" Air dodge length and jump squat timing")]),a._v(" "),e("p",[a._v("Important for wavedashing feeling consistent. Changing will make wave dash inputs different than every other character.")]),a._v(" "),e("blockquote",[e("p",[a._v("Any speed boost is really good. +speed buffs basically every attack.\n~ Mawral")])]),a._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[a._v("walk_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.25")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3 - 4.5. The maximum speed you can achieve while walking, in pixels per frame")]),a._v("\nwalk_accel "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("0.35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .2 – .5. The speed gained per frame while walking")]),a._v("\n\ninitial_dash_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 8 – 16. The number of frames in your initial dash")]),a._v("\ninitial_dash_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("7.2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4 – 11. The speed of your initial dash in pixels per frame.")]),a._v("\ndash_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6.7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4.75 – 9. The speed of your run in pixels per frame")]),a._v("\ndash_turn_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 8 – 20. The number of frames it takes to turn while running")]),a._v("\ndash_turn_accel "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .1 – 2. The acceleration applied when turning while running")]),a._v("\ndash_stop_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4 – 6. The number of frames it takes to stop while running")]),a._v("\ndash_stop_percent "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .25 – .5. the value to multiply your hsp by when going into idle from dash or dashstop")]),a._v("\n\nground_friction "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .3 – 1. Natural deceleration while on the ground")]),a._v("\n\nmoonwalk_accel "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1.2 – 1.4.\tThe acceleration to apply while moonwalking")]),a._v("\n\njump_start_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 5 for all characters. The number of frames of jumpsquat minus one")]),a._v("\nshort_hop_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6.5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4 – 7.4\tThe vsp applied when shorthopping")]),a._v("\njump_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 7.6 – 12. The vsp applied when fullhopping")]),a._v("\nleave_ground_max "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4 – 8. The maximum hsp you can have when you go from grounded to aerial without jumping")]),a._v("\nmax_jump_hsp "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6.5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4 – 8. The maximum hsp you can have when jumping from the ground")]),a._v("\n\nmax_djumps "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// The max number of double jumps you can use.")]),a._v("\ndjump_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 8 – 12 (-1 for Absa). The vsp applied when double jumping")]),a._v("\njump_change "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3 for all characters. The hsp applied if left or right is held when jumping. Will not slow you down if you’re already going faster. When reversing your momentum with a double jump, this is the maximum hsp you can have")]),a._v("\n\nair_accel "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .2 – .4. The hsp acceleration applied when you hold left or right in a normal aerial state")]),a._v("\nprat_fall_accel "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".85")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .4 – 1.5.\tA multiplier to your normal horizontal aerial acceleration: 1 = normal; 0 = no acceleration")]),a._v("\nair_max_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//3 – 7. The maximum hsp you can accelerate to when in a normal aerial state")]),a._v("\nair_friction "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".02")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .02 – .07. Natural deceleration applied while in the air. Also applies while in hitstun")]),a._v("\n\nwalljump_hsp "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4 – 7. The horizontal speed to apply while walljumping, in pixels per frame")]),a._v("\nwalljump_vsp "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("9")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 7 – 10. The vertical speed to apply while walljumping, in pixels per frame")]),a._v("\nwalljump_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("24")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 18 – 32.\tThe number of frames the walljump state takes. Normally 32, but some characters have shorter values")]),a._v("\n\nmax_fall "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 8 – 11. The maximum vsp you can accelerate to while falling normally")]),a._v("\nfast_fall "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 11 – 16. The vsp applied when fastfalling")]),a._v("\n\ngravity_speed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .3 – .6. The gravitational acceleration applied in non-hitstun aerial states")]),a._v("\nhitstun_grav "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// .45 – .525. The gravitational acceleration applied in hitstun")]),a._v("\n\nland_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 4 – 6. The number of frames in your normal landing state")]),a._v("\nprat_land_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3 – 24. The number of frames in your prat land state")]),a._v("\nwave_land_time "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("8")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 6 – 12 usually 8. The number of frames your waveland state lasts")]),a._v("\nwave_land_adj "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.35")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1.2 – 1.5. The multiplier to your initial hsp when wavelanding. Usually greater than 1")]),a._v("\nwave_friction "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v(".05")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 0 – .15. Grounded deceleration when wavelanding")]),a._v("\n\nknockback_adj "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//.9 – 1.2. The multiplier to knockback dealt to you: 1 = default value; higher values = lighter character; lower values = heavier character")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);