(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{477:function(e,t,a){"use strict";a.r(t);var n=a(26),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"common-errors"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#common-errors"}},[e._v("#")]),e._v(" Common Errors")]),e._v(" "),a("p",[e._v("This is a searchable list of error messages, and common fixes.")]),e._v(" "),a("p",[e._v("For a general guide to fixing code problems, see "),a("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/debugging.html"}},[e._v("Debugging")])],1),e._v(" "),a("h3",{attrs:{id:"instance-id-object-does-not-have-variable-variable-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instance-id-object-does-not-have-variable-variable-name"}},[e._v("#")]),e._v(" "),a("code",[e._v("<instance id> (<object>) does not have variable '<variable name>'")])]),e._v(" "),a("ul",[a("li",[e._v("Maybe you misspelled the variable name")]),e._v(" "),a("li",[e._v("Maybe the variable wasn't created yet")]),e._v(" "),a("li",[e._v("If you're using "),a("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/with.html"}},[a("code",[e._v("with")])]),e._v(" to run code on a group of objects, maybe you're affecting more than\nyou mean to, and need an if.")],1)]),e._v(" "),a("h3",{attrs:{id:"expected-a-statement-got-character"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#expected-a-statement-got-character"}},[e._v("#")]),e._v(" "),a("code",[e._v("Expected a statement, got <character>")])]),e._v(" "),a("p",[e._v("There's probably an incomplete line that isn't a statement (a piece of code that does something).")]),e._v(" "),a("p",[e._v("For example, a line containing only "),a("code",[e._v("attack == AT_DTILT")]),e._v(" doesn't do anything. "),a("code",[e._v("==")]),e._v(" compares "),a("code",[e._v("attack")]),e._v(" and "),a("code",[e._v("AT_DTILT")]),e._v(", and\nmakes a "),a("code",[e._v("true")]),e._v(" or "),a("code",[e._v("false")]),e._v(" value, but that value isn't saved or used by anything.")]),e._v(" "),a("h3",{attrs:{id:"type-check-failure-for-argument-argument-num-expected-a-correct-type"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-check-failure-for-argument-argument-num-expected-a-correct-type"}},[e._v("#")]),e._v(" "),a("code",[e._v("Type check failure for argument <argument num>: Expected a <correct type>")])]),e._v(" "),a("p",[e._v("You're using the wrong type as one of the arguments, like a "),a("code",[e._v('"3"')]),e._v(" text string when you need a "),a("code",[e._v("3")]),e._v(" number.  "),a("br"),e._v("\nSee "),a("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/data_types.html"}},[e._v("data types")]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"unable-to-convert-string-something-png-to-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unable-to-convert-string-something-png-to-number"}},[e._v("#")]),e._v(" "),a("code",[e._v('unable to convert string "<something>.png" to number')])]),e._v(" "),a("p",[e._v("You may have named a spritesheet wrong. Sprites should look like "),a("code",[e._v("idle_strip4.png")]),e._v(".\n"),a("code",[e._v("Couldn't find instance <instance id>")]),e._v(" "),a("br"),e._v("\nThere is probably code running referencing a destroyed article. Referencing a dead player may cause this?")]),e._v(" "),a("p",[e._v("See "),a("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/articles.html#safely"}},[e._v("destroying articles safely.")])],1),e._v(" "),a("h3",{attrs:{id:"connection-error-there-was-a-desync"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connection-error-there-was-a-desync"}},[e._v("#")]),e._v(" "),a("code",[e._v("Connection error, there was a desync.")])]),e._v(" "),a("p",[e._v("Desyncs are a notoriously tricky bug to fix. They occur in online games when two players have different game states.")]),e._v(" "),a("p",[e._v("When a desync occurs, screenshots are automatically logged to "),a("code",[e._v("%localappdata%/RivalsofAether/desyncs")])]),e._v(" "),a("p",[e._v("Things that can cause desyncs include:")]),e._v(" "),a("ul",[a("li",[e._v("Setting a non-local variable in "),a("RouterLink",{attrs:{to:"/workshop_guide/programming/reference/scripts/animation_scripts.html#draw-scripts"}},[e._v("draw scripts")]),e._v(".  "),a("br"),e._v("\nAny variables set should be made local with "),a("code",[e._v("var")]),e._v(".  "),a("br"),e._v("\nThis includes purely visual variables like colors and sprite indices.")],1),e._v(" "),a("li",[e._v("GML's random functions, eg "),a("code",[e._v("random_range")]),e._v(". These will give different numbers for different players.  "),a("br"),e._v("\nUse "),a("code",[e._v("random_func()")]),e._v(" and "),a("code",[e._v("random_func_2()")])]),e._v(" "),a("li",[e._v("GML's camera functions "),a("code",[e._v("view_get_xview")]),e._v(" and "),a("code",[e._v("view_get_yview")]),e._v(".  "),a("br"),e._v("\nTry "),a("code",[e._v('get_instance_x(asset_get("camera_obj"))')]),e._v(" instead.")]),e._v(" "),a("li",[e._v("Code based on the alt you have loaded.  "),a("br"),e._v("\nIf both players load the same alt, the opponent's alt will automatically change, causing different states.")]),e._v(" "),a("li",[e._v("Anything that pauses the game, like "),a("code",[e._v("get_string()")])]),e._v(" "),a("li",[e._v("(Unconfirmed) Rounding numbers might sometimes cause desyncs. You can use "),a("code",[e._v("floor")]),e._v(" instead if you're concerned.")]),e._v(" "),a("li",[e._v("(Unconfirmed) Articles with image_angle being not 0 might sometimes cause desyncs.")])]),e._v(" "),a("p",[e._v("Assistant will automatically warn for some cases where it's able to detect desync prone code.")]),e._v(" "),a("h3",{attrs:{id:"hitbox-not-hitting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hitbox-not-hitting"}},[e._v("#")]),e._v(" Hitbox not Hitting")]),e._v(" "),a("ul",[a("li",[e._v("Is priority unset for the hitbox? Hitboxes with priority of 0 will not hit.")]),e._v(" "),a("li",[e._v("Try setting hitbox group to -1.")])]),e._v(" "),a("h3",{attrs:{id:"single-frame-attack-code-happening-every-frame-during-hitpause"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#single-frame-attack-code-happening-every-frame-during-hitpause"}},[e._v("#")]),e._v(" Single Frame Attack Code Happening Every Frame During Hitpause")]),e._v(" "),a("p",[e._v("Special attack code often uses a frame check like "),a("code",[e._v("window_timer == 1")]),e._v(" or "),a("code",[e._v("window_timer % 4 == 0")]),e._v(" to make the code run on\nthat particular frame.")]),e._v(" "),a("p",[e._v("However, during hitpause, the "),a("code",[e._v("window_timer")]),e._v(" doesn't advance, which can cause the code to run each frame while the\nhitpause is active.")]),e._v(" "),a("p",[e._v("If using "),a("a",{attrs:{href:"/assistant"}},[e._v("the assistant")]),e._v(", consider using "),a("code",[e._v("window_time_is(frame)")]),e._v(" instead of "),a("code",[e._v("window_timer == frame")]),e._v(" to\nautomatically check for hitpause. "),a("br"),e._v("\nOtherwise add "),a("code",[e._v("and not hitpause")]),e._v(" to the check.")]),e._v(" "),a("h3",{attrs:{id:"set-attack-crashes-in-set-attack-gml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-attack-crashes-in-set-attack-gml"}},[e._v("#")]),e._v(" "),a("code",[e._v("set_attack")]),e._v(" Crashes in "),a("code",[e._v("set_attack.gml")])]),e._v(" "),a("p",[e._v("Calling "),a("code",[e._v("set_attack")]),e._v(" in "),a("code",[e._v("set_attack.gml")]),e._v(" risks creating an infinite loop.")]),e._v(" "),a("p",[e._v("Just write "),a("code",[e._v("attack =")]),e._v(" when needed in "),a("code",[e._v("set_attack.gml")]),e._v(".")]),e._v(" "),a("div",{staticClass:"custom-block construction"},[a("p",{staticClass:"custom-block-title"},[e._v("Under Construction")]),e._v(" "),a("p",[e._v("I'd like this page to be heavily expanded.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);