(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{491:function(t,a,s){"use strict";s.r(a);var e=s(26),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"quickstart-programming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#quickstart-programming"}},[t._v("#")]),t._v(" Quickstart: Programming")]),t._v(" "),s("p",[t._v("Programming in Rivals has the potential to make almost anything you can imagine, but this guide will just get you\nstarted.")]),t._v(" "),s("p",[t._v("The most common scripts for adding logic\nare "),s("RouterLink",{attrs:{to:"/workshop_guide/programming/reference/scripts/event_scripts.html#update-gml"}},[s("code",[t._v("update.gml")])]),t._v(" which runs every frame,\nand "),s("RouterLink",{attrs:{to:"/workshop_guide/programming/reference/scripts/event_scripts.html#attack-update-gml"}},[s("code",[t._v("attack_update.gml")])]),t._v(", which\nruns every frame that you are attacking.")],1),t._v(" "),s("p",[t._v("This section will take you through a bunch of tiny examples.")]),t._v(" "),s("p",[t._v("Actually try them in game, and make your own experiments. As\nyou "),s("a",{attrs:{href:"/workshop_guide/programming/learning_path"}},[t._v("learn more about programming")]),t._v(", the possibility space will explode.")]),t._v(" "),s("h2",{attrs:{id:"turbo-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#turbo-mode"}},[t._v("#")]),t._v(" Turbo Mode!")]),t._v(" "),s("p",[t._v("Turbo mode lets you act immediately when you hit someone, rather than waiting for the endlag to finish.")]),t._v(" "),s("p",[t._v("You can set up turbo mode yourself with very little code:")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attack_update.gml")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" has_hit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Stuff inside this will only run if the attack has hit")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iasa_script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Makes the character free to act. "Interrupt as soon as"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("That's pretty silly of course. For something saner you could try:")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attack_update.gml")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_USPECIAL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" has_hit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Only functions when the attack is uspecial")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("iasa_script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_DTILT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" has_hit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    can_jump "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Rather than letting you do anything, only lets you jump cancel")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// or making it only cancelable during a certain window.")]),t._v("\n")])])]),s("h2",{attrs:{id:"wind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wind"}},[t._v("#")]),t._v(" Wind")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update.gml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Increase your character's x position by 1.")]),t._v("\n")])])]),s("p",[t._v("This pushes your character to the right each frame, as if it's very windy.")]),t._v(" "),s("p",[s("br"),t._v("\nWhat if they're always charging forwards instead? Then instead of increasing "),s("code",[t._v("x")]),t._v(", "),s("code",[t._v("x")]),t._v(" should change in the direction\nthey're facing.")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// update.gml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("spr_dir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//spr_dir is 1 when you're facing right, and -1 when you're facing left.")]),t._v("\n")])])]),s("h2",{attrs:{id:"speed-multiplier"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#speed-multiplier"}},[t._v("#")]),t._v(" Speed Multiplier")]),t._v(" "),s("p",[t._v("Let's make using nair double our current speed?")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attack_update.gml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_NAIR "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Multiply horizontal and vertical speed by 2")]),t._v("\n    hsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n    vsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// BROKEN. OOPS.")]),t._v("\n")])])]),s("p",[t._v("Uh. Be careful not to use that while you're moving straight upward, or it may crash your game.")]),t._v(" "),s("p",[t._v("Let's add print debugging to see what's happening with our speed.")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attack_update.gml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_NAIR "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    hsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n    vsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("prints")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hsp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vsp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// Print "horizontal speed, vertical speed" each frame. ')]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://i.gyazo.com/3d8e10ca4c9d141e1223c8c490082efa.png",alt:""}})]),t._v(" "),s("p",[t._v("Oops. "),s("code",[t._v("attack_update.gml")]),t._v(" runs every frame the attack is happening, not just the first frame. So instead of doubling the\nspeed once, it doubles it every frame, with ludicrous results.")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attack_update.gml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_NAIR "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" state_timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if nair and you just started attacking")]),t._v("\n    hsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" \n    vsp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"extra-jump-on-hitting-dair"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extra-jump-on-hitting-dair"}},[t._v("#")]),t._v(" Extra Jump on hitting Dair")]),t._v(" "),s("p",[t._v("Maybe you think your character's offstage down-air plays are really cool, but too dangerous to be worth trying.")]),t._v(" "),s("p",[t._v("You could grant the player their double jump back on hit, to help them get back on stage.")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// hit_player.gml (Runs once, when your character hits another)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_DAIR "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    djumps "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Sets the number of currently used double jumps to 0.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"fspecial-teleports-you-back-to-the-start-location"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fspecial-teleports-you-back-to-the-start-location"}},[t._v("#")]),t._v(" Fspecial teleports you back to the start location")]),t._v(" "),s("div",{staticClass:"language-gml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-gml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// attack_update.gml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_FSPECIAL "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" window "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("window_time_is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// At the beginning of the first window")]),t._v("\n        fspec_starting_x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Save the current location to a new variable")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" window "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("window_time_is")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Partway through the last window ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("x")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fspec_starting_x "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Move back to the saved location")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This one demonstrates a little persistent behavior by using\na "),s("a",{attrs:{href:"/workshop_guide/programming/learning_path/variables"}},[t._v("variable")])])])}),[],!1,null,null,null);a.default=n.exports}}]);