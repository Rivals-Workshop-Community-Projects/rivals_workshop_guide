(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{483:function(t,a,e){"use strict";e.r(a);var s=e(26),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"event-scripts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#event-scripts"}},[t._v("#")]),t._v(" Event Scripts")]),t._v(" "),e("h2",{attrs:{id:"every-frame"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#every-frame"}},[t._v("#")]),t._v(" Every frame")]),t._v(" "),e("h3",{attrs:{id:"update-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#update-gml"}},[t._v("#")]),t._v(" update.gml")]),t._v(" "),e("p",[t._v("Called every frame. This is the standard script for adding constant behavior to the game.")]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" PS_TECH_GROUND "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" state_timer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_play")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"woah"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"attack-update-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#attack-update-gml"}},[t._v("#")]),t._v(" attack_update.gml")]),t._v(" "),e("p",[t._v("Called every frame when the character is attacking. The "),e("code",[t._v("attack")]),t._v(" variable contains the current attack type.")]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_NSPECIAL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_FSPECIAL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_DSPECIAL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_USPECIAL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("trigger_b_reverse")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_DSPECIAL "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    hsp "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"in-response"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#in-response"}},[t._v("#")]),t._v(" In Response")]),t._v(" "),e("h3",{attrs:{id:"set-attack-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-attack-gml"}},[t._v("#")]),t._v(" set_attack.gml")]),t._v(" "),e("p",[t._v("Called at the beginning of every attack. Used to replace the attack in special conditions.")]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_DSPECIAL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" free "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_attack")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AT_DSPECIAL_AIR"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"death-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#death-gml"}},[t._v("#")]),t._v(" death.gml")]),t._v(" "),e("p",[t._v("Called when your character dies. Useful for resetting variables or deleting articles.")]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[t._v("laser_charge "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" my_cloud "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("noone")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    my_cloud"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("should_die "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"hit-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hit-events"}},[t._v("#")]),t._v(" Hit events")]),t._v(" "),e("p",[t._v("To change the knockback given, modify "),e("code",[t._v("orig_knock")]),t._v(" on the hit character.")]),t._v(" "),e("p",[t._v("You can disable the purple kill effect by setting "),e("code",[t._v("should_make_shockwave")]),t._v(" to "),e("code",[t._v("false")]),t._v(" on the hit character.")]),t._v(" "),e("h4",{attrs:{id:"hit-player-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hit-player-gml"}},[t._v("#")]),t._v(" hit_player.gml")]),t._v(" "),e("p",[t._v("Called when you hit another character with any hitbox.")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("hit_player_obj")]),t._v(" - the oPlayer instance that was hit.")]),t._v(" "),e("li",[e("code",[t._v("hit_player")]),t._v(" - the player number of the hit character (player 1, player 2, etc).")]),t._v(" "),e("li",[e("code",[t._v("my_hitboxID")]),t._v(" - the hitbox you hit them with.")])]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" my_hitboxID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_NAIR "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    can_jump "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"got-hit-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#got-hit-gml"}},[t._v("#")]),t._v(" got_hit.gml")]),t._v(" "),e("p",[t._v("Called when you are hit by any hitbox.")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("hit_player_obj")]),t._v(" - "),e("em",[t._v("Misleading.")]),t._v(" Whatever instance created the hitbox "),e("em",[t._v("that hit you.")]),t._v(" "),e("em",[t._v("May not be an oPlayer\ninstance.")])]),t._v(" "),e("li",[e("code",[t._v("hit_player")]),t._v(" - "),e("em",[t._v("Misleading")]),t._v(". The player number of the "),e("code",[t._v("hit_player_obj")]),t._v(" (player 1, player 2, etc).")]),t._v(" "),e("li",[e("code",[t._v("enemy_hitboxID")]),t._v(" - the hitbox you were hit with.")])]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[t._v("used_uspecial "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\nlightning_buff_active "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),e("h3",{attrs:{id:"parrying-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parrying-events"}},[t._v("#")]),t._v(" Parrying events")]),t._v(" "),e("h4",{attrs:{id:"parry-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parry-gml"}},[t._v("#")]),t._v(" parry.gml")]),t._v(" "),e("p",[t._v("Called when you parry a hitbox.")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("hit_player_obj")]),t._v(" - "),e("em",[t._v("Misleading.")]),t._v(" The player object whose hitbox you parried.")]),t._v(" "),e("li",[e("code",[t._v("hit_player")]),t._v(" - "),e("em",[t._v("Misleading.")]),t._v(" The player number of the "),e("code",[t._v("hit_player_obj")]),t._v(" (player 1, player 2, etc).")]),t._v(" "),e("li",[e("code",[t._v("enemy_hitboxID")]),t._v(" - the hitbox you parried.")])]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_play")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ohno"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("shake_camera")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h4",{attrs:{id:"got-parried-gml"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#got-parried-gml"}},[t._v("#")]),t._v(" got_parried.gml")]),t._v(" "),e("p",[t._v("Called when your hitbox is parried.")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("hit_player_obj")]),t._v(" - "),e("em",[t._v("Misleading.")]),t._v(" The player object who parried your hitbox.")]),t._v(" "),e("li",[e("code",[t._v("hit_player")]),t._v(" - "),e("em",[t._v("Misleading.")]),t._v(" The player number of the `hit_player_obj (player 1, player 2, etc).")]),t._v(" "),e("li",[e("code",[t._v("my_hitboxID")]),t._v("- the hitbox that was parried.")])]),t._v(" "),e("div",{staticClass:"language-gml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-gml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("my_hitboxID"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attack "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_USPECIAL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  state "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PS_PRATFALL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"user-events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#user-events"}},[t._v("#")]),t._v(" User Events")]),t._v(" "),e("p",[e("code",[t._v("user_event[0 – 15].gml")])]),t._v(" "),e("p",[t._v("These scripts can be called manually with the "),e("code",[t._v("user_event()")]),t._v(" function, making them similar to\nwriting "),e("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/functions.html#making-functions-with-define"}},[e("code",[t._v("define")]),t._v(" functions")]),t._v(" that are accessible from multiple\nfiles.")],1),t._v(" "),e("div",{staticClass:"custom-block construction"},[e("p",{staticClass:"custom-block-title"},[t._v("Under Construction")]),t._v(" "),e("p",[t._v("This is made largely obsolete by the workshop assistant, pending public release.")])])])}),[],!1,null,null,null);a.default=r.exports}}]);