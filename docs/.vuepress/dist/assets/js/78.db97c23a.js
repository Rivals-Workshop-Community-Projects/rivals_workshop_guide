(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{466:function(t,e,a){"use strict";a.r(e);var s=a(26),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"programming-best-practices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#programming-best-practices"}},[t._v("#")]),t._v(" Programming Best Practices")]),t._v(" "),a("p",[t._v("The natural tendency of new programmers is to write code that works, and then move on. That leads to a\ntrail of chaos left behind, where the code may work, but it's hard to tell "),a("em",[t._v("how")]),t._v(" or "),a("em",[t._v("why.")])]),t._v(" "),a("p",[a("br"),t._v("\nThat feels fine until you need to change something. Maybe you're trying to find the cause of a bug and fix it, or you're\ntrying to adjust how part of the character works. "),a("strong",[t._v("You'll be back.")]),t._v(" Code is read much more often than it's written.")]),t._v(" "),a("p",[a("br"),t._v("\nStaying organized also prevents a lot of bugs before they happen. Spending a little more time making your code clean and\norganized will "),a("em",[t._v("save")]),t._v(" you more time in the future.")]),t._v(" "),a("h1",{attrs:{id:"naming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#naming"}},[t._v("#")]),t._v(" Naming")]),t._v(" "),a("p",[t._v("This is the quickest win. Once good naming is a habit, all your code will be easier to understand.")]),t._v(" "),a("p",[a("br"),t._v("\nNaming well is conceptually simple. Think of what the variable "),a("em",[t._v("means.")]),t._v(" If someone asked you what the variable is, think of what\nyou'd tell them. That's what your variable name should say.")]),t._v(" "),a("p",[a("br"),t._v("\nDon't worry too much about keeping your variable names very short. Editors provide autocompletion of variable names.\nIf a variable name takes 3 or 4 words to be clear, use 3 or 4 words.")]),t._v(" "),a("div",{staticClass:"custom-block construction"},[a("p",{staticClass:"custom-block-title"},[t._v("Under Construction")]),t._v(" "),a("p",[t._v("Could use some demonstrative examples here")])]),t._v(" "),a("h2",{attrs:{id:"be-consistent"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#be-consistent"}},[t._v("#")]),t._v(" Be consistent")]),t._v(" "),a("p",[t._v("Later you're going to want to remember what you called something.")]),t._v(" "),a("p",[t._v("If you've named similar things before, follow the same patterns. Stick to "),a("code",[t._v("camel_case_naming")]),t._v(" to be consistent with\nRivals' built-in functions.")]),t._v(" "),a("p",[t._v("Rivals doesn't do a great job of this itself. The variable to see if a character can cancel their current action into a\nwall jump is "),a("code",[t._v("can_wall_jump")]),t._v(". Can you guess the variable to see if a character has a remaining wall jump?\nIt's "),a("code",[t._v("has_walljump")]),t._v(". Try to make your code obvious, and avoid creased foreheads.")]),t._v(" "),a("h1",{attrs:{id:"duplication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#duplication"}},[t._v("#")]),t._v(" Duplication")]),t._v(" "),a("p",[t._v('When you write something in multiple places, there is a high chance it\'s "logical duplication", which can make your\njob much harder later on.')]),t._v(" "),a("p",[t._v("By extracting the repeated code to a name, you can avoid needing to change multiple places, and make the code more\nreadable.")]),t._v(" "),a("h2",{attrs:{id:"values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#values"}},[t._v("#")]),t._v(" Values")]),t._v(" "),a("div",{staticClass:"language-gml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-gml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// A charge shot with a charged and uncharged stage.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// When charge is 50, it plays a sound and creates a stronger projectile.")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" laser_charge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_play")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sfx_ghost_glove"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... Some time later")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" laser_charge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the stronger attack")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the weaker attack")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("During balancing, you realize it's charging too slowly, and you want to try it at 40. It's been a while, so you forgot\nthat you wrote '50' in multiple places, and you miss one, and get a weird bug. Searching all project files for '50'\ncould help, but can be messy, especially if the same value has for another meaning.")]),t._v(" "),a("p",[t._v("The solution is to save '50' to a variable with a nice descriptive name, and use that variable instead of the value\ndirectly.")]),t._v(" "),a("div",{staticClass:"language-gml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-gml"}},[a("code",[t._v("laser_charge_requirement "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v(" # The only code that needs to be changed to alter the value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" charge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" laser_charge_requirement "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_play")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sfx_ghost_glove"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ... Some time later")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" laser_charge "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" laser_charge_requirement "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the stronger attack")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the weaker attack")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"behavior"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#behavior"}},[t._v("#")]),t._v(" Behavior")]),t._v(" "),a("p",[t._v("Behavior can also duplicated. When you find you're writing the nearly identical lines of code in multiple places, that\ncan lead to the same sort of problem.")]),t._v(" "),a("div",{staticClass:"language-gml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-gml"}},[a("code",[t._v("# The character has an empowered state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" which buffs their next special "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" then ends"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_NSPECIAL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" empowered "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Code that does empowered nspecial)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_play")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sfx_go"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        empowered "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_DSPECIAL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" empowered "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Code that does empowered dspecial)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_play")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sfx_go"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        empowered "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Say that later you want to add a flash as well as the sound effect. Again, you'd need to make the same changes to\nmultiple places to avoid weird inconsistent behavior.")]),t._v(" "),a("p",[t._v("Fortunately, you can save the behavior to a "),a("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/functions.html"}},[t._v("function")]),t._v(" with a "),a("code",[t._v("#define")]),t._v(" block.")],1),t._v(" "),a("div",{staticClass:"language-gml extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-gml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_NSPECIAL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" empowered "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Code that does empowered nspecial)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spend_empowered")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attack "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" AT_DSPECIAL "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" empowered "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Code that does empowered dspecial)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spend_empower")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n#define "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("spend_empower")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_play")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sound_get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sfx_go"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    empowered "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])])]),a("p",[t._v("Now adding the flash requires only one change in the new function. Using descriptive named values like "),a("code",[t._v("spend_empower")]),t._v(" often improves\nreadability as well.")]),t._v(" "),a("p",[t._v("With "),a("a",{attrs:{href:"/assistant"}},[t._v("the Assistant")]),t._v(", you can share defines across files, rather than needing to copy them into each file\nwhere they're used.")]),t._v(" "),a("h1",{attrs:{id:"writing-simple-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#writing-simple-code"}},[t._v("#")]),t._v(" Writing Simple Code")]),t._v(" "),a("p",[t._v("Much of the code you see will be long, tangled, and hard to follow.")]),t._v(" "),a("p",[t._v("Code doesn't need to be that way. Reading well written code feels like a friend clearly explaining what the code does.")]),t._v(" "),a("p",[a("br"),t._v("\nWith some practice and effort, you can create complex effects out of simple code that is easy to understand, fix, and\nchange. To do this, actually think of how you would clearly describe what the code does, and turn that\ndescription into code.")]),t._v(" "),a("p",[a("br"),t._v("\nFor example, I might describe a command grab at a high level as:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("when nspecial hits:\n  Grab the opponent\n  While they are held:\n    Move slower and can't double jump\n    if you release the button: Throw them in the held direction\n    If you get too close to the bottom blastzone: drop them\n    After a timer: drop them\n")])])]),a("p",[t._v("(Note that if you can't write something like this, you probably don't know what you want yet.)")]),t._v(" "),a("p",[a("br"),t._v("\nThen you can try to turn the description into meaningful code.")]),t._v(" "),a("p",[t._v('Often, parts of the code will require more detail to fully explain, such as "throw them in the held direction." If you\ndirectly write down those details, it will obscure the clear, high-level meaning! Instead, use a '),a("RouterLink",{attrs:{to:"/workshop_guide/programming/learning_path/functions.html"}},[t._v("function")]),t._v(" to\nseparate the details, and keep the meaning clear.")],1),t._v(" "),a("div",{staticClass:"language-gml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-gml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("not")]),t._v(" special_down "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throw_in_held_direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n#define "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("throw_in_held_direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Lots of code")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h1",{attrs:{id:"understanding-your-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#understanding-your-code"}},[t._v("#")]),t._v(" Understanding your Code")]),t._v(" "),a("p",[t._v("It is common in Rivals modding to learn how to do something by copying something similar from another mod. This sort of\nworks, but is setting yourself up to struggle.")]),t._v(" "),a("p",[t._v("It's hard enough to change and fix problems in code that you wrote yourself, that you're most prepared to understand.\nRelying on code you don't understand is an easy way to get buggy behavior and not know why or how to fix it.")]),t._v(" "),a("p",[t._v("When adding new code, make sure you can see what it's doing and why. What would happen if you changed or removed part?\nTry things out in game and see if they meet your expectations. Better to find out now than later when other code is\nrelying on it.")])])}),[],!1,null,null,null);e.default=n.exports}}]);